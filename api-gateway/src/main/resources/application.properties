spring.application.name=api-gateway

# providing username and password as part of the URL
eureka.client.service-url.defaultZone=http://localhost:8761/eureka

logging.level.root=INFO
logging.level.org.springframework.cloud.gateway.route.RouteDefinitionLocator=INFO
# enable tracing of incoming requests
logging.level.org.springframework.cloud.gateway=TRACE

spring.cloud.gateway.routes[0].id=product-service
# using lb instead of http enables client-side load-balancing capabilities of api-gateway
spring.cloud.gateway.routes[0].uri=lb://product-service
# all requests with /api/product in path will be routed to the product service
# for more see documentation:
# https://docs.spring.io/spring-cloud-gateway/docs/current/reference/html/#gateway-request-predicates-factories
spring.cloud.gateway.routes[0].predicates[0]=Path=/api/product

spring.cloud.gateway.routes[1].id=order-service
spring.cloud.gateway.routes[1].uri=lb://order-service
spring.cloud.gateway.routes[1].predicates[0]=Path=/api/order

#spring.cloud.gateway.routes[2].id=inventory-service
#spring.cloud.gateway.routes[2].uri=lb://inventory-service
#spring.cloud.gateway.routes[2].predicates[0]=Path=/api/inventory

spring.cloud.gateway.routes[2].id=discovery-server
# we only provide one instance of the discovery-server, so no need to load balance
spring.cloud.gateway.routes[2].uri=http://localhost:8761
spring.cloud.gateway.routes[2].predicates[0]=Path=/eureka/web
# load static resources like css as well
spring.cloud.gateway.routes[2].predicates[1]=Path=/eureka/**
# making a call to the api gateways "/eureka/web" we forward the request to "/"
spring.cloud.gateway.routes[2].filters[0]=SetPath=/

server.port=8080

# keycloak
spring.security.oauth2.resourceserver.jwt.issuer-uri=http://localhost:9090/realms/dev

# distributed tracing
spring.zipkin.base-url=http://localhost:9411
# trace 100% of requests
spring.sleuth.sampler.probability=1.0